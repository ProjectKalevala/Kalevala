class t{constructor(){this.lazyImageObserver=null,"IntersectionObserver"in window&&(this.lazyImageObserver=new IntersectionObserver(this.handleIntersection.bind(this)))}handleIntersection(s,e){s.forEach(r=>{if(r.isIntersecting){let a=r.target;a.src=a.dataset.src,a.classList.remove("lazy-load-item"),this.lazyImageObserver.unobserve(a)}})}loadImages(){var s=[].slice.call(document.querySelectorAll("img.lazy-load-item"));this.lazyImageObserver?s.forEach(e=>{this.lazyImageObserver.observe(e)}):s.forEach(e=>{e.src=e.dataset.src,e.classList.remove("lazy-load-item")})}}window.lazyLoadImages=new t;document.addEventListener("DOMContentLoaded",function(){window.lazyLoadImages.loadImages()});
